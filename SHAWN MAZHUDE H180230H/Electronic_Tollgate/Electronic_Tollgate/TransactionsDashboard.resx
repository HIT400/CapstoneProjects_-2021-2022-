<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>